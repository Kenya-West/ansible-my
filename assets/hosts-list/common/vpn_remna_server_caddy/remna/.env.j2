### Pulled from mainstream: https://raw.githubusercontent.com/remnawave/backend/refs/heads/main/.env.sample

### APP ###
APP_PORT=3000
METRICS_PORT=3001

### API ###
# Possible values: max (start instances on all cores), number (start instances on number of cores), -1 (start instances on all cores - 1)
# !!! Do not set this value more than physical cores count in your machine !!!
# Review documentation: https://remna.st/docs/install/environment-variables#scaling-api
API_INSTANCES=1

### DATABASE ###
# FORMAT: postgresql://{user}:{password}@{host}:{port}/{database}
DATABASE_URL="postgresql://postgres:{{ remna_server_caddy_postgres_password }}@remnawave-db:5432/postgres"

### REDIS ###
REDIS_HOST=remnawave-redis
REDIS_PORT=6379

### JWT ###
### CHANGE DEFAULT VALUES ###
JWT_AUTH_SECRET={{ remna_server_caddy_jwt_auth_secret }}
JWT_API_TOKENS_SECRET={{ remna_server_caddy_jwt_api_tokens_secret }}

### TELEGRAM NOTIFICATIONS ###
IS_TELEGRAM_NOTIFICATIONS_ENABLED={{ remna_server_caddy_is_telegram_notifications_enabled | default(false) }}
TELEGRAM_BOT_TOKEN={{ remna_server_caddy_telegram_bot_token | default('') }}
TELEGRAM_NOTIFY_USERS_CHAT_ID={{ remna_server_caddy_telegram_notify_users_chat_id | default('') }}
TELEGRAM_NOTIFY_NODES_CHAT_ID={{ remna_server_caddy_telegram_notify_nodes_chat_id | default('') }}

### Telegram Oauth (Login with Telegram) 
### true/false 
TELEGRAM_OAUTH_ENABLED={{ remna_server_caddy_telegram_oauth_enabled | default(false) }}
### Array of Admin Chat Ids. These ids will be allowed to login.
TELEGRAM_OAUTH_ADMIN_IDS={{ remna_server_caddy_telegram_oauth_admin_ids | default('') }}

# Optional
# Only set if you want to use topics
TELEGRAM_NOTIFY_USERS_THREAD_ID={{ remna_server_caddy_telegram_notify_users_thread_id | default('') }}
TELEGRAM_NOTIFY_NODES_THREAD_ID={{ remna_server_caddy_telegram_notify_nodes_thread_id | default('') }}

### FRONT_END ###
# Used by CORS, you can leave it as * or place your domain there
FRONT_END_DOMAIN={{ domains_keys.vpn }}

### SUBSCRIPTION PUBLIC DOMAIN ###
### DOMAIN, WITHOUT HTTP/HTTPS, DO NOT ADD / AT THE END ###
### Used in "profile-web-page-url" response header and in UI/API ###
### Review documentation: https://remna.st/docs/install/environment-variables#domains
SUB_PUBLIC_DOMAIN={{ domains_keys.vpn }}/{{ remna_server_caddy_subscription_path }}

### If CUSTOM_SUB_PREFIX is set in @remnawave/subscription-page, append the same path to SUB_PUBLIC_DOMAIN. Example: SUB_PUBLIC_DOMAIN=sub-page.example.com/sub

### SWAGGER ###
SWAGGER_PATH=/docs
SCALAR_PATH=/scalar
IS_DOCS_ENABLED=true

### PROMETHEUS ###
### Metrics are available at /api/metrics
METRICS_USER={{ remna_server_caddy_metrics_user }}
METRICS_PASS={{ remna_server_caddy_metrics_pass }}

### WEBHOOK ###
WEBHOOK_ENABLED={{ remna_server_caddy_webhook_enabled }}
### Only https:// is allowed
WEBHOOK_URL=https://{{ domains_keys.vpn }}/{{ remna_server_caddy_webhook_url_path }}
### This secret is used to sign the webhook payload, must be exact 64 characters. Only a-z, 0-9, A-Z are allowed.
WEBHOOK_SECRET_HEADER={{ remna_server_caddy_webhook_secret_header }}

### HWID DEVICE DETECTION AND LIMITATION ###
# Don't enable this if you don't know what you are doing.
# Review documentation before enabling this feature.
# https://remna.st/docs/features/hwid-device-limit/
HWID_DEVICE_LIMIT_ENABLED=false


### Bandwidth usage reached notifications
BANDWIDTH_USAGE_NOTIFICATIONS_ENABLED=false
# Only in ASC order (example: [60, 80]), must be valid array of integer(min: 25, max: 95) numbers. No more than 5 values.
BANDWIDTH_USAGE_NOTIFICATIONS_THRESHOLD=[60, 80]





### CLOUDFLARE ###
# USED ONLY FOR docker-compose-prod-with-cf.yml
# NOT USED BY THE APP ITSELF
CLOUDFLARE_TOKEN=ey...

### Database ###
### For Postgres Docker container ###
# NOT USED BY THE APP ITSELF
POSTGRES_USER=postgres
POSTGRES_PASSWORD={{ remna_server_caddy_postgres_password }}
POSTGRES_DB=postgres