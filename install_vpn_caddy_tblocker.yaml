---
- name: Install XRay Torrent Blocker to Remnanode
  hosts: vpn_caddy:vpn_remna
  become: true
  become_user: root
  vars:
    project_dir: "{{ vpn_project_structure_end_dirs.tblocker | ansible.builtin.basename }}"
    docker_compose_project_name: tblocker
    project_root_dir: "{{ vpn_project_structure_root }}"
    source_asset_rootpath_common: "{{ playbook_dir }}/assets/hosts-list/common/{{ project_root_dir }}"
    source_asset_fullpath_common: "{{ source_asset_rootpath_common }}/{{ project_dir }}"
    source_asset_rootpath_project: "{{ playbook_dir }}/assets/hosts-list/{{ inventory_hostname }}/{{ project_root_dir }}"
    source_asset_fullpath_project: "{{ source_asset_rootpath_project }}/{{ project_dir }}"
    dest_project_rootpath: "/home/{{ standard_user }}/{{ project_root_dir }}"
    dest_project_fullpath: "{{ dest_project_rootpath }}/{{ project_dir }}"
    dest_project_fullpath_systemd: "/etc/systemd/system"

  roles:
    - name: ./roles/kwtoolset/copy_files_templating
      become: true
      become_user: "{{ standard_user }}"
      vars:
        copy_files_templating_dir_list:
          - src: "{{ source_asset_fullpath_common }}/config"
            dest: "{{ dest_project_fullpath }}"
            default_mode: "0775"
          - src: "{{ source_asset_fullpath_project }}/config"
            dest: "{{ dest_project_fullpath }}"
            default_mode: "0775"

  post_tasks:
    - name: Copy config for tblocker systemd service
      ansible.builtin.template:
        src: "{{ source_asset_fullpath_common }}/systemd/tblocker.service.j2"
        dest: "{{ dest_project_fullpath_systemd }}/tblocker.service"
    - name: Find if config specific to host exists
      ansible.builtin.stat:
        path: "{{ source_asset_fullpath_project }}/systemd/tblocker.service.j2"
      delegate_to: localhost
      register: tblocker_service_host_stat
    - name: Copy config for tblocker systemd service per-host if exists
      ansible.builtin.template:
        src: "{{ source_asset_fullpath_project }}/systemd/tblocker.service.j2"
        dest: "{{ dest_project_fullpath_systemd }}/tblocker.service"
      when: tblocker_service_host_stat.stat.exists

    - name: Enable and start tblocker service
      ansible.builtin.systemd:
        name: tblocker
        enabled: true
        state: started
        daemon_reload: true
      register: tblocker_service_status
      failed_when: tblocker_service_status is failed
