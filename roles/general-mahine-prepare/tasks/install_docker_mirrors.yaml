---
- name: Install Docker
  hosts: all
  become: true
  vars_files:
    - '{{ inventory_dir }}/vars/vars.yaml'
  vars:
    docker_config_file: "/etc/docker/daemon.json"
    docker_features:
      containerd-snapshotter: true
    docker_mirrors_ru:
      - "https://dockerhub.timeweb.cloud"
      - "https://mirror.gcr.io"
      - "https://daocloud.io"
      - "https://c.163.com"
      - "https://registry.docker-cn.com"
    
  tasks:
    - name: Get the public IP of the host
      command: curl -s ifconfig.me
      register: public_ip
      changed_when: false

    - name: Query IPInfo for geolocation information
      uri:
        url: "https://ipinfo.io/{{ public_ip.stdout }}/json"
        method: GET
        return_content: yes
      register: ipinfo_response

    - name: Parse the country from IPInfo response
      set_fact:
        country: "{{ ipinfo_response.json.country }}"

    - name: Debug country information
      debug:
        msg: "The country for IP {{ public_ip.stdout }} is {{ country }}"

    - name: Ensure Docker configuration file exists
      file:
        path: "{{ docker_config_file }}"
        state: touch
        mode: '0644'
      when: country == 'RU'

    - name: Read existing Docker configuration
      slurp:
        path: "{{ docker_config_file }}"
      register: docker_config_file_content
      when: country == 'RU'

    - name: Parse existing Docker configuration
      set_fact:
        docker_config: "{{ docker_config_file_content.content | b64decode | from_json | default({}) }}"
      when: country == 'RU' and docker_config_file_content.content | b64decode | length > 0

    - name: Use default Docker configuration
      set_fact:
        docker_config: {}
      when: country == 'RU' and not (docker_config_file_content.content | b64decode | length > 0)

    - name: Set Docker Hub mirrors
      set_fact:
        docker_config: "{{ docker_config | combine({'registry-mirrors': docker_mirrors_ru}) }}"
      when: country == 'RU'

    - name: Set Docker features
      set_fact:
        docker_config: "{{ docker_config | combine({'features': docker_features}) }}"
      when: country == 'RU'

    - name: Write updated Docker configuration
      copy:
        content: "{{ docker_config | to_nice_json }}"
        dest: "{{ docker_config_file }}"
        mode: '0644'
        backup: yes
      when: country == 'RU'

    - name: Restart Docker
      service:
        name: docker
        state: restarted
      when: country == 'RU'
