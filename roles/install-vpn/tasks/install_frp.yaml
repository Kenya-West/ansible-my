---
- name: Install FRP with Docker
  hosts: all
  become: true
  vars_files:
    - '{{ inventory_dir }}/vars/vars.yaml'
  vars:
    frp_dir: frp

  tasks:
  - name: Ensure ~/frp directory exists
    file:
      path: "/home/{{ standard_user }}/{{ frp_dir }}/"
      state: directory
      mode: '0775'
  - name: Ensure ~/frp/config-frpc directory exists
    file:
      path: "/home/{{ standard_user }}/{{ frp_dir }}/config-frpc"
      state: directory
      mode: '0775'
  - name: Ensure ~/frp/config-frps directory exists
    file:
      path: "/home/{{ standard_user }}/{{ frp_dir }}/config-frps"
      state: directory
      mode: '0775'
  - name: Copy all files from local root assets/frp to remote ~/frp
    copy:
      src: "{{ item }}"
      dest: "/home/{{ standard_user }}/{{ frp_dir }}/{{ item | basename }}"
    with_fileglob:
      - "{{ inventory_dir }}/assets/frp/docker-compose.yml"
      - "{{ inventory_dir }}/assets/frp/.env"
  - name: Copy FRPC config from local assets/frp/config-frpc to remote ~/frp/config-frpc
    copy:
      src: "{{ item }}"
      dest: "/home/{{ standard_user }}/{{ frp_dir }}/config-frpc/{{ item | basename }}"
    with_fileglob:
      - "{{ inventory_dir }}/assets/frp/config-frpc/*"
    register: copy_files_frpc_config
  - name: Copy FRPS config from local assets/frp/config-frps to remote ~/frp/config-frps
    copy:
      src: "{{ item }}"
      dest: "/home/{{ standard_user }}/{{ frp_dir }}/config-frps/{{ item | basename }}"
    with_fileglob:
      - "{{ inventory_dir }}/assets/frp/config-frps/*"
    register: copy_files_frpc_config
  - name: Run docker compose up for frps
    command: docker compose up frps -d
    args:
      chdir: "/home/{{ standard_user }}/{{ frp_dir }}/"
    register: docker_compose_up
  - name: Wait for 3 seconds after starting docker compose
    pause:
      seconds: 3
    when: docker_compose_up.changed
  - name: Check if frps service is running correctly
    command: docker compose ps frps
    args:
      chdir: "/home/{{ standard_user }}/{{ frp_dir }}/"
    register: docker_ps
    failed_when: "'Up' not in docker_ps.stdout"
    when: docker_compose_up.changed
