---
- name: Install and configure node_exporter with dependencies
  hosts: all
  become: false
  become_user: "{{ standard_user }}"
  vars:
    project_dir: node_exporter
    project_name: node_exporter
    project_root_dir: "{{ analytics_project_structure_root }}"
    source_asset_rootpath_common: "{{ playbook_dir }}/assets/hosts-list/common/{{ project_root_dir }}"
    source_asset_fullpath_common: "{{ source_asset_rootpath_common }}/{{ project_dir }}"
    source_asset_rootpath_project: "{{ playbook_dir }}/assets/hosts-list/{{ inventory_hostname }}/{{ project_root_dir }}"
    source_asset_fullpath_project: "{{ source_asset_rootpath_project }}/{{ project_dir }}"
    dest_project_rootpath: "/home/{{ standard_user }}/{{ project_root_dir }}"
    dest_project_fullpath: "{{ dest_project_rootpath }}/{{ project_dir }}"

  roles:
    - name: ./roles/kwtoolset/copy_files
      vars:
        dir_list:
          - src: "{{ source_asset_fullpath_common }}"
            dest: "{{ dest_project_rootpath }}"
            default_mode: "0775"
          - src: "{{ source_asset_fullpath_project }}"
            dest: "{{ dest_project_rootpath }}"
            default_mode: "0775"
    - name: prometheus.prometheus.node_exporter
      become: true
      become_user: root

  post_tasks:
    - name: Create {{ cert_access_group }} group
      become: true
      become_user: root
      ansible.builtin.group:
        name: "{{ cert_access_group }}"
        state: present
    - name: Add {{ node_exporter_system_user }} user to {{ cert_access_group }} group
      become: true
      become_user: root
      ansible.builtin.user:
        name: "{{ node_exporter_system_user }}"
        groups: "{{ cert_access_group }}"
        append: true
        state: present
    - name: Add {{ node_exporter_system_user }} user to {{ standard_user }} group
      become: true
      become_user: root
      ansible.builtin.user:
        name: "{{ node_exporter_system_user }}"
        groups: "{{ standard_user }}"
        append: true
        state: present

    - name: Get FragmentPath for node_exporter.service
      become: true
      become_user: root
      ansible.builtin.command:
        cmd: "systemctl show -P FragmentPath node_exporter.service"
      register: node_exporter_service_fragment_path

    - name: Ensure ProtectHome is set to 'no'
      become: true
      become_user: root
      ansible.builtin.lineinfile:
        path: "{{ node_exporter_service_fragment_path.stdout }}"
        regexp: "^ProtectHome=.*"
        line: "ProtectHome=no"
        insertafter: "[Service]" # Ensures the line is added under [Service] if not found
        backup: true

    - name: Ensure NoNewPrivileges is set to 'no'
      become: true
      become_user: root
      ansible.builtin.lineinfile:
        path: "{{ node_exporter_service_fragment_path.stdout }}"
        regexp: "^NoNewPrivileges=.*"
        line: "NoNewPrivileges=no"
        insertafter: "[Service]" # Ensures the line is added under [Service] if not found
        backup: true

    - name: Validate systemd configuration by reloading
      become: true
      become_user: root
      ansible.builtin.command:
        cmd: "systemctl daemon-reexec"

    - name: Reload systemd daemon
      become: true
      become_user: root
      ansible.builtin.systemd:
        daemon_reload: true

    - name: Restart node_exporter service
      become: true
      become_user: root
      ansible.builtin.systemd:
        name: node_exporter.service
        state: restarted

    - name: Reminder to run install_ufw.yaml playbook
      ansible.builtin.debug:
        msg: |
          Reminder: Run the install_ufw.yaml playbook for host {{ inventory_hostname }} and environment.
          Example command: ansible-playbook -i {{ inventory_file | basename }} install_ufw.yaml --limit {{ inventory_hostname }}
